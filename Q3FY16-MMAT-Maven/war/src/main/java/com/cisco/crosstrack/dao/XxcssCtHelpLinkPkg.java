/*****************************************************************************
 * XxcssCtHelpLinkPkg.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/

package com.cisco.crosstrack.dao;

/* Begin generated import statements */
import java.io.*;
import java.util.*;
import oracle.jdbc.driver.*;
import java.sql.*;
import oracle.sql.*;
import java.math.BigDecimal;
import com.cisco.ca.fea.daoservices.DAOServices;
import com.cisco.ca.fea.daoservices.util.ConnectionUtil;
 


/* End generated import statements */

/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 


public class XxcssCtHelpLinkPkg extends Object implements java.io.Serializable {

    private static XxcssCtHelpLinkPkg theInstance=null;
    
/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */

    


/* BEGIN PROTECT_BLOCK user_public_constants */
/* END PROTECT_BLOCK user_public_constants */


/* BEGIN PROTECT_BLOCK user_static_initializers */
/* END PROTECT_BLOCK user_static_initializers */


    public static synchronized XxcssCtHelpLinkPkg getInstance() {
        if (theInstance==null) {
            theInstance = new XxcssCtHelpLinkPkg();
        }
        return theInstance;
    }
    
    private XxcssCtHelpLinkPkg() {
/* BEGIN PROTECT_BLOCK user_private_constructor */
/* END PROTECT_BLOCK user_private_constructor */

    }
    

    
    private static com.cisco.crosstrack.dao.XxcssCtHelpFieldsObjType buildFromStruct(Connection conn,com.cisco.crosstrack.dao.XxcssCtHelpFieldsObjType attribute,STRUCT struct)
        throws SQLException,InstantiationException,IllegalAccessException {
        com.cisco.crosstrack.dao.XxcssCtHelpFieldsObjType obj=null;
        if (struct==null) {   
            obj=null;
        } else {
            if (attribute==null) {
                obj=com.cisco.crosstrack.dao.XxcssCtHelpFieldsObjType.newFromStruct(conn,struct);
            } else {
                obj=attribute;
                obj.loadFromStruct(conn,struct);
            }
        }
        return obj;
    }
    private static List buildListFromOracleArray(Connection conn,List list,ARRAY array,com.cisco.crosstrack.dao.XxcssCtHelpLinkObjType dummy)
        throws SQLException,InstantiationException,IllegalAccessException {
        List rlist=null;
        com.cisco.crosstrack.dao.XxcssCtHelpLinkObjType element=null;
        Object[] jarray=null;
        STRUCT struct=null;
        rlist=(list==null) ? new ArrayList() : list;
        if (list != null) {
            list.clear();
        }
        if (array!=null) {
            jarray=(Object[])array.getArray();
            for (int i=0;i<jarray.length;i++) {
                struct=(STRUCT)jarray[i];
                if (struct == null) {
                    element = null;
                } else {
                    element=com.cisco.crosstrack.dao.XxcssCtHelpLinkObjType.newFromStruct(conn,struct);
                }
                rlist.add(element);
            }
        }
        return rlist;
    }

       

    public void helpLinkMain(
        DAOServices services,
        String applicationId,
        String languageCode,
        String userName,
        java.util.List[] helpLinkTab,
        String[] returnStatus)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin xxcss_ct_help_link_pkg.help_link_main(:1,:2,:3,:4,:5); end;");
            stmt.setString(1,applicationId);
            stmt.setString(2,languageCode);
            stmt.setString(3,userName);
            /*2*/stmt.registerOutParameter(4, OracleTypes.ARRAY,"APPS.XXCSS_CT_HELP_LINK_TAB_TYPE");
            /*3*/stmt.registerOutParameter(5, OracleTypes.VARCHAR);
            stmt.execute();
            ARRAY helpLinkTabArray=(ARRAY)stmt.getArray(4);
            helpLinkTab[0]=buildListFromOracleArray(services.getNativeConnection(conn),helpLinkTab[0],helpLinkTabArray,(com.cisco.crosstrack.dao.XxcssCtHelpLinkObjType)null);
            returnStatus[0]=(String)stmt.getString(5);

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }


    public void helpLinkMsg(
        DAOServices services,
        com.cisco.crosstrack.dao.XxcssCtHelpFieldsObjType[] helpParamsTab,
        String userName,
        String[] returnStatus)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin xxcss_ct_help_link_pkg.help_link_msg(:1,:2,:3); end;");
            stmt.setObject(1,(helpParamsTab[0]==null) ? null : helpParamsTab[0].asStruct(services.getNativeConnection(conn)));
            /*1*/stmt.registerOutParameter(1, OracleTypes.STRUCT,"APPS.XXCSS_CT_HELP_FIELDS_OBJ_TYPE");
            stmt.setString(2,userName);
            /*3*/stmt.registerOutParameter(3, OracleTypes.VARCHAR);
            stmt.execute();
            STRUCT helpParamsTabStruct=(STRUCT)stmt.getObject(1);
            helpParamsTab[0]=buildFromStruct(services.getNativeConnection(conn),helpParamsTab[0],helpParamsTabStruct);
            returnStatus[0]=(String)stmt.getString(3);

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }


    public void appendText(
        DAOServices services,
        String messageText,
        String linkName,
        String url,
        String[] resultText)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin xxcss_ct_help_link_pkg.append_text(:1,:2,:3,:4); end;");
            stmt.setString(1,messageText);
            stmt.setString(2,linkName);
            stmt.setString(3,url);
            /*3*/stmt.registerOutParameter(4, OracleTypes.VARCHAR);
            stmt.execute();
            resultText[0]=(String)stmt.getString(4);

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }


    
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
