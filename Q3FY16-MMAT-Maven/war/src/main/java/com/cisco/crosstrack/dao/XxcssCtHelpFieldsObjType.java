/*****************************************************************************
 * XxcssCtHelpFieldsObjType.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/

package com.cisco.crosstrack.dao;

import oracle.sql.*;
import java.sql.*;
import java.math.BigDecimal;
import java.util.*;


/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 
public class XxcssCtHelpFieldsObjType 
/* BEGIN PROTECT_BLOCK user_extends */
/* END PROTECT_BLOCK user_extends */

implements java.io.Serializable,Cloneable 
/* BEGIN PROTECT_BLOCK user_implements */
/* END PROTECT_BLOCK user_implements */

{



    public static java.sql.Timestamp MISSING_DATE;
    public static final BigDecimal MISSING_NUM=new BigDecimal("9.99E125");
    public static final String MISSING_CHAR=new String(new byte[]{0});
    public static Class factoryClass = XxcssCtHelpFieldsObjType.class;

    static {     
        GregorianCalendar gc = new GregorianCalendar(4713,0,1);
        gc.set(GregorianCalendar.ERA,GregorianCalendar.BC);
        java.util.Date d=gc.getTime();
        MISSING_DATE=new java.sql.Timestamp(d.getTime());
    };

    public static void setFactoryClass(Class aFactoryClass) {
        factoryClass = aFactoryClass;
    }
    
    public static XxcssCtHelpFieldsObjType newInstance()
        throws InstantiationException, IllegalAccessException {
        return (XxcssCtHelpFieldsObjType) factoryClass.newInstance();
    }

public XxcssCtHelpFieldsObjType() {
        applicationCode=MISSING_CHAR;
        languageCode=MISSING_CHAR;
        screenName=MISSING_CHAR;
        fieldName=MISSING_CHAR;
        displayName=MISSING_CHAR;
        messageText=MISSING_CHAR;
        displayFlag=MISSING_CHAR;
        linkName1=MISSING_CHAR;
        linkUrl1=MISSING_CHAR;
        linkName2=MISSING_CHAR;
        linkUrl2=MISSING_CHAR;
        linkName3=MISSING_CHAR;
        linkUrl3=MISSING_CHAR;
        linkName4=MISSING_CHAR;
        linkUrl4=MISSING_CHAR;
        linkName5=MISSING_CHAR;
        linkUrl5=MISSING_CHAR;

/* BEGIN PROTECT_BLOCK user_default_constructor_code */
/* END PROTECT_BLOCK user_default_constructor_code */

}

/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */


    private String applicationCode;
    private String languageCode;
    private String screenName;
    private String fieldName;
    private String displayName;
    private String messageText;
    private String displayFlag;
    private String linkName1;
    private String linkUrl1;
    private String linkName2;
    private String linkUrl2;
    private String linkName3;
    private String linkUrl3;
    private String linkName4;
    private String linkUrl4;
    private String linkName5;
    private String linkUrl5;


    // getter methods
    public String getApplicationCode() {
        return applicationCode;
    }
    public String getLanguageCode() {
        return languageCode;
    }
    public String getScreenName() {
        return screenName;
    }
    public String getFieldName() {
        return fieldName;
    }
    public String getDisplayName() {
        return displayName;
    }
    public String getMessageText() {
        return messageText;
    }
    public String getDisplayFlag() {
        return displayFlag;
    }
    public String getLinkName1() {
        return linkName1;
    }
    public String getLinkUrl1() {
        return linkUrl1;
    }
    public String getLinkName2() {
        return linkName2;
    }
    public String getLinkUrl2() {
        return linkUrl2;
    }
    public String getLinkName3() {
        return linkName3;
    }
    public String getLinkUrl3() {
        return linkUrl3;
    }
    public String getLinkName4() {
        return linkName4;
    }
    public String getLinkUrl4() {
        return linkUrl4;
    }
    public String getLinkName5() {
        return linkName5;
    }
    public String getLinkUrl5() {
        return linkUrl5;
    }

    // setter methods                       
    public void setApplicationCode(String aApplicationCode) {
        applicationCode = aApplicationCode;
    }
    public void setLanguageCode(String aLanguageCode) {
        languageCode = aLanguageCode;
    }
    public void setScreenName(String aScreenName) {
        screenName = aScreenName;
    }
    public void setFieldName(String aFieldName) {
        fieldName = aFieldName;
    }
    public void setDisplayName(String aDisplayName) {
        displayName = aDisplayName;
    }
    public void setMessageText(String aMessageText) {
        messageText = aMessageText;
    }
    public void setDisplayFlag(String aDisplayFlag) {
        displayFlag = aDisplayFlag;
    }
    public void setLinkName1(String aLinkName1) {
        linkName1 = aLinkName1;
    }
    public void setLinkUrl1(String aLinkUrl1) {
        linkUrl1 = aLinkUrl1;
    }
    public void setLinkName2(String aLinkName2) {
        linkName2 = aLinkName2;
    }
    public void setLinkUrl2(String aLinkUrl2) {
        linkUrl2 = aLinkUrl2;
    }
    public void setLinkName3(String aLinkName3) {
        linkName3 = aLinkName3;
    }
    public void setLinkUrl3(String aLinkUrl3) {
        linkUrl3 = aLinkUrl3;
    }
    public void setLinkName4(String aLinkName4) {
        linkName4 = aLinkName4;
    }
    public void setLinkUrl4(String aLinkUrl4) {
        linkUrl4 = aLinkUrl4;
    }
    public void setLinkName5(String aLinkName5) {
        linkName5 = aLinkName5;
    }
    public void setLinkUrl5(String aLinkUrl5) {
        linkUrl5 = aLinkUrl5;
    }


    // other methods


    public XxcssCtHelpFieldsObjType loadFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        Object[] attributes=struct.getAttributes();
        applicationCode=(String)attributes[0];
        languageCode=(String)attributes[1];
        screenName=(String)attributes[2];
        fieldName=(String)attributes[3];
        displayName=(String)attributes[4];
        messageText=(String)attributes[5];
        displayFlag=(String)attributes[6];
        linkName1=(String)attributes[7];
        linkUrl1=(String)attributes[8];
        linkName2=(String)attributes[9];
        linkUrl2=(String)attributes[10];
        linkName3=(String)attributes[11];
        linkUrl3=(String)attributes[12];
        linkName4=(String)attributes[13];
        linkUrl4=(String)attributes[14];
        linkName5=(String)attributes[15];
        linkUrl5=(String)attributes[16];

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return this;
    }
    
    public STRUCT asStruct(Connection conn)
        throws SQLException {
        STRUCT struct=null;
        StructDescriptor sd=
            StructDescriptor.createDescriptor("APPS.XXCSS_CT_HELP_FIELDS_OBJ_TYPE",conn);
        Object[] attributes = new Object[]{
            ((applicationCode==null) ? null : new CHAR(applicationCode,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((languageCode==null) ? null : new CHAR(languageCode,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((screenName==null) ? null : new CHAR(screenName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((fieldName==null) ? null : new CHAR(fieldName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((displayName==null) ? null : new CHAR(displayName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((messageText==null) ? null : new CHAR(messageText,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((displayFlag==null) ? null : new CHAR(displayFlag,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkName1==null) ? null : new CHAR(linkName1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkUrl1==null) ? null : new CHAR(linkUrl1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkName2==null) ? null : new CHAR(linkName2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkUrl2==null) ? null : new CHAR(linkUrl2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkName3==null) ? null : new CHAR(linkName3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkUrl3==null) ? null : new CHAR(linkUrl3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkName4==null) ? null : new CHAR(linkName4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkUrl4==null) ? null : new CHAR(linkUrl4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkName5==null) ? null : new CHAR(linkName5,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((linkUrl5==null) ? null : new CHAR(linkUrl5,CharacterSet.make(CharacterSet.UTF8_CHARSET)))
        };
        struct=new STRUCT(sd,conn,attributes);

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return struct;
    }
    
    public static XxcssCtHelpFieldsObjType newFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        XxcssCtHelpFieldsObjType newInstance=newInstance();
        newInstance.loadFromStruct(conn,struct);
/* BEGIN PROTECT_BLOCK user_new_from_struct_code */
/* END PROTECT_BLOCK user_new_from_struct_code */

        return newInstance;
    }
    
    public String toString() {
        StringBuffer toStringBuffer = new StringBuffer();
        toStringBuffer.append(getClass());
        toStringBuffer.append("@");
        toStringBuffer.append(super.hashCode());
        toStringBuffer.append("[");
        this.appendToStringAttributes(toStringBuffer);
        toStringBuffer.append("]");
        return toStringBuffer.toString();
    }     

    protected void appendToStringAttributes(StringBuffer sb) {
        sb.append("applicationCode=").append(applicationCode);
        sb.append(",languageCode=").append(languageCode);
        sb.append(",screenName=").append(screenName);
        sb.append(",fieldName=").append(fieldName);
        sb.append(",displayName=").append(displayName);
        sb.append(",messageText=").append(messageText);
        sb.append(",displayFlag=").append(displayFlag);
        sb.append(",linkName1=").append(linkName1);
        sb.append(",linkUrl1=").append(linkUrl1);
        sb.append(",linkName2=").append(linkName2);
        sb.append(",linkUrl2=").append(linkUrl2);
        sb.append(",linkName3=").append(linkName3);
        sb.append(",linkUrl3=").append(linkUrl3);
        sb.append(",linkName4=").append(linkName4);
        sb.append(",linkUrl4=").append(linkUrl4);
        sb.append(",linkName5=").append(linkName5);
        sb.append(",linkUrl5=").append(linkUrl5);

    }
    
    public Object clone() throws CloneNotSupportedException {
        XxcssCtHelpFieldsObjType theClone = (XxcssCtHelpFieldsObjType) super.clone();
        


        return theClone;
    }
    
    public boolean equals(Object obj) {
        boolean retVal = false;
        if (obj != null) {
            retVal = (hashCode()==obj.hashCode());   
        }
        return retVal; 
    }
    
    public int hashCode() {
        StringBuffer hashStringBuffer = new StringBuffer();
        
        hashStringBuffer.append("applicationCode=").append(applicationCode);
        hashStringBuffer.append("languageCode=").append(languageCode);
        hashStringBuffer.append("screenName=").append(screenName);
        hashStringBuffer.append("fieldName=").append(fieldName);
        hashStringBuffer.append("displayName=").append(displayName);
        hashStringBuffer.append("messageText=").append(messageText);
        hashStringBuffer.append("displayFlag=").append(displayFlag);
        hashStringBuffer.append("linkName1=").append(linkName1);
        hashStringBuffer.append("linkUrl1=").append(linkUrl1);
        hashStringBuffer.append("linkName2=").append(linkName2);
        hashStringBuffer.append("linkUrl2=").append(linkUrl2);
        hashStringBuffer.append("linkName3=").append(linkName3);
        hashStringBuffer.append("linkUrl3=").append(linkUrl3);
        hashStringBuffer.append("linkName4=").append(linkName4);
        hashStringBuffer.append("linkUrl4=").append(linkUrl4);
        hashStringBuffer.append("linkName5=").append(linkName5);
        hashStringBuffer.append("linkUrl5=").append(linkUrl5);

        return hashStringBuffer.toString().hashCode();
    }
      
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
