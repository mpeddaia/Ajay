/*****************************************************************************
 * XxcssMatCovLineRecType.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/
package com.cisco.mcm.genJava;


import oracle.sql.*;
import java.sql.*;
import java.math.BigDecimal;
import java.util.*;


/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 
public class XxcssMatCovLineRecType 
/* BEGIN PROTECT_BLOCK user_extends */
/* END PROTECT_BLOCK user_extends */

implements java.io.Serializable,Cloneable 
/* BEGIN PROTECT_BLOCK user_implements */
/* END PROTECT_BLOCK user_implements */

{



    public static java.sql.Timestamp MISSING_DATE;
    public static final BigDecimal MISSING_NUM=new BigDecimal("9.99E125");
    public static final String MISSING_CHAR=new String(new byte[]{0});
    public static Class factoryClass = XxcssMatCovLineRecType.class;

    static {     
        GregorianCalendar gc = new GregorianCalendar(4713,0,1);
        gc.set(GregorianCalendar.ERA,GregorianCalendar.BC);
        java.util.Date d=gc.getTime();
        MISSING_DATE=new java.sql.Timestamp(d.getTime());
    };

    public static void setFactoryClass(Class aFactoryClass) {
        factoryClass = aFactoryClass;
    }
    
    public static XxcssMatCovLineRecType newInstance()
        throws InstantiationException, IllegalAccessException {
        return (XxcssMatCovLineRecType) factoryClass.newInstance();
    }

public XxcssMatCovLineRecType() {
        id=MISSING_NUM;
        cleId=MISSING_NUM;
        chrId=MISSING_NUM;
        lineNumber=MISSING_NUM;
        instanceId=MISSING_NUM;
        productStartDate=MISSING_DATE;
        productEndDate=MISSING_DATE;
        quantity=MISSING_NUM;
        listPrice=MISSING_NUM;
        negotiatedAmount=MISSING_NUM;
        stsCode=MISSING_CHAR;
        attribute1=MISSING_CHAR;
        attribute2=MISSING_CHAR;
        attribute3=MISSING_CHAR;
        attribute4=MISSING_CHAR;
        attribute5=MISSING_CHAR;
        attribute6=MISSING_CHAR;
        attribute7=MISSING_CHAR;
        attribute8=MISSING_CHAR;
        attribute9=MISSING_CHAR;
        attribute10=MISSING_CHAR;
        attribute11=MISSING_CHAR;
        attribute12=MISSING_CHAR;
        attribute13=MISSING_CHAR;
        attribute14=MISSING_CHAR;
        attribute15=MISSING_CHAR;
        renewCleId=MISSING_NUM;
        terminationReason=MISSING_CHAR;
        terminationComments=MISSING_CHAR;
        errMsg=MISSING_CHAR;
        cleIdRenewedTo=MISSING_NUM;
        cleIdRenewed=MISSING_NUM;
        dateTerminated=MISSING_DATE;
        trnCode=MISSING_CHAR;

/* BEGIN PROTECT_BLOCK user_default_constructor_code */
/* END PROTECT_BLOCK user_default_constructor_code */

}

/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */


    private BigDecimal id;
    private BigDecimal cleId;
    private BigDecimal chrId;
    private BigDecimal lineNumber;
    private BigDecimal instanceId;
    private Timestamp productStartDate;
    private Timestamp productEndDate;
    private BigDecimal quantity;
    private BigDecimal listPrice;
    private BigDecimal negotiatedAmount;
    private String stsCode;
    private String attribute1;
    private String attribute2;
    private String attribute3;
    private String attribute4;
    private String attribute5;
    private String attribute6;
    private String attribute7;
    private String attribute8;
    private String attribute9;
    private String attribute10;
    private String attribute11;
    private String attribute12;
    private String attribute13;
    private String attribute14;
    private String attribute15;
    private BigDecimal renewCleId;
    private String terminationReason;
    private String terminationComments;
    private String errMsg;
    private BigDecimal cleIdRenewedTo;
    private BigDecimal cleIdRenewed;
    private Timestamp dateTerminated;
    private String trnCode;


    // getter methods
    public BigDecimal getId() {
        return id;
    }
    public BigDecimal getCleId() {
        return cleId;
    }
    public BigDecimal getChrId() {
        return chrId;
    }
    public BigDecimal getLineNumber() {
        return lineNumber;
    }
    public BigDecimal getInstanceId() {
        return instanceId;
    }
    public Timestamp getProductStartDate() {
        return productStartDate;
    }
    public Timestamp getProductEndDate() {
        return productEndDate;
    }
    public BigDecimal getQuantity() {
        return quantity;
    }
    public BigDecimal getListPrice() {
        return listPrice;
    }
    public BigDecimal getNegotiatedAmount() {
        return negotiatedAmount;
    }
    public String getStsCode() {
        return stsCode;
    }
    public String getAttribute1() {
        return attribute1;
    }
    public String getAttribute2() {
        return attribute2;
    }
    public String getAttribute3() {
        return attribute3;
    }
    public String getAttribute4() {
        return attribute4;
    }
    public String getAttribute5() {
        return attribute5;
    }
    public String getAttribute6() {
        return attribute6;
    }
    public String getAttribute7() {
        return attribute7;
    }
    public String getAttribute8() {
        return attribute8;
    }
    public String getAttribute9() {
        return attribute9;
    }
    public String getAttribute10() {
        return attribute10;
    }
    public String getAttribute11() {
        return attribute11;
    }
    public String getAttribute12() {
        return attribute12;
    }
    public String getAttribute13() {
        return attribute13;
    }
    public String getAttribute14() {
        return attribute14;
    }
    public String getAttribute15() {
        return attribute15;
    }
    public BigDecimal getRenewCleId() {
        return renewCleId;
    }
    public String getTerminationReason() {
        return terminationReason;
    }
    public String getTerminationComments() {
        return terminationComments;
    }
    public String getErrMsg() {
        return errMsg;
    }
    public BigDecimal getCleIdRenewedTo() {
        return cleIdRenewedTo;
    }
    public BigDecimal getCleIdRenewed() {
        return cleIdRenewed;
    }
    public Timestamp getDateTerminated() {
        return dateTerminated;
    }
    public String getTrnCode() {
        return trnCode;
    }

    // setter methods                       
    public void setId(BigDecimal aId) {
        id = aId;
    }
    public void setCleId(BigDecimal aCleId) {
        cleId = aCleId;
    }
    public void setChrId(BigDecimal aChrId) {
        chrId = aChrId;
    }
    public void setLineNumber(BigDecimal aLineNumber) {
        lineNumber = aLineNumber;
    }
    public void setInstanceId(BigDecimal aInstanceId) {
        instanceId = aInstanceId;
    }
    public void setProductStartDate(Timestamp aProductStartDate) {
        productStartDate = aProductStartDate;
    }
    public void setProductEndDate(Timestamp aProductEndDate) {
        productEndDate = aProductEndDate;
    }
    public void setQuantity(BigDecimal aQuantity) {
        quantity = aQuantity;
    }
    public void setListPrice(BigDecimal aListPrice) {
        listPrice = aListPrice;
    }
    public void setNegotiatedAmount(BigDecimal aNegotiatedAmount) {
        negotiatedAmount = aNegotiatedAmount;
    }
    public void setStsCode(String aStsCode) {
        stsCode = aStsCode;
    }
    public void setAttribute1(String aAttribute1) {
        attribute1 = aAttribute1;
    }
    public void setAttribute2(String aAttribute2) {
        attribute2 = aAttribute2;
    }
    public void setAttribute3(String aAttribute3) {
        attribute3 = aAttribute3;
    }
    public void setAttribute4(String aAttribute4) {
        attribute4 = aAttribute4;
    }
    public void setAttribute5(String aAttribute5) {
        attribute5 = aAttribute5;
    }
    public void setAttribute6(String aAttribute6) {
        attribute6 = aAttribute6;
    }
    public void setAttribute7(String aAttribute7) {
        attribute7 = aAttribute7;
    }
    public void setAttribute8(String aAttribute8) {
        attribute8 = aAttribute8;
    }
    public void setAttribute9(String aAttribute9) {
        attribute9 = aAttribute9;
    }
    public void setAttribute10(String aAttribute10) {
        attribute10 = aAttribute10;
    }
    public void setAttribute11(String aAttribute11) {
        attribute11 = aAttribute11;
    }
    public void setAttribute12(String aAttribute12) {
        attribute12 = aAttribute12;
    }
    public void setAttribute13(String aAttribute13) {
        attribute13 = aAttribute13;
    }
    public void setAttribute14(String aAttribute14) {
        attribute14 = aAttribute14;
    }
    public void setAttribute15(String aAttribute15) {
        attribute15 = aAttribute15;
    }
    public void setRenewCleId(BigDecimal aRenewCleId) {
        renewCleId = aRenewCleId;
    }
    public void setTerminationReason(String aTerminationReason) {
        terminationReason = aTerminationReason;
    }
    public void setTerminationComments(String aTerminationComments) {
        terminationComments = aTerminationComments;
    }
    public void setErrMsg(String aErrMsg) {
        errMsg = aErrMsg;
    }
    public void setCleIdRenewedTo(BigDecimal aCleIdRenewedTo) {
        cleIdRenewedTo = aCleIdRenewedTo;
    }
    public void setCleIdRenewed(BigDecimal aCleIdRenewed) {
        cleIdRenewed = aCleIdRenewed;
    }
    public void setDateTerminated(Timestamp aDateTerminated) {
        dateTerminated = aDateTerminated;
    }
    public void setTrnCode(String aTrnCode) {
        trnCode = aTrnCode;
    }


    // other methods


    public XxcssMatCovLineRecType loadFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        Object[] attributes=struct.getAttributes();
        id=(BigDecimal)attributes[0];
        cleId=(BigDecimal)attributes[1];
        chrId=(BigDecimal)attributes[2];
        lineNumber=(BigDecimal)attributes[3];
        instanceId=(BigDecimal)attributes[4];
        productStartDate=(Timestamp)attributes[5];
        productEndDate=(Timestamp)attributes[6];
        quantity=(BigDecimal)attributes[7];
        listPrice=(BigDecimal)attributes[8];
        negotiatedAmount=(BigDecimal)attributes[9];
        stsCode=(String)attributes[10];
        attribute1=(String)attributes[11];
        attribute2=(String)attributes[12];
        attribute3=(String)attributes[13];
        attribute4=(String)attributes[14];
        attribute5=(String)attributes[15];
        attribute6=(String)attributes[16];
        attribute7=(String)attributes[17];
        attribute8=(String)attributes[18];
        attribute9=(String)attributes[19];
        attribute10=(String)attributes[20];
        attribute11=(String)attributes[21];
        attribute12=(String)attributes[22];
        attribute13=(String)attributes[23];
        attribute14=(String)attributes[24];
        attribute15=(String)attributes[25];
        renewCleId=(BigDecimal)attributes[26];
        terminationReason=(String)attributes[27];
        terminationComments=(String)attributes[28];
        errMsg=(String)attributes[29];
        cleIdRenewedTo=(BigDecimal)attributes[30];
        cleIdRenewed=(BigDecimal)attributes[31];
        dateTerminated=(Timestamp)attributes[32];
        trnCode=(String)attributes[33];

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return this;
    }
    
    public STRUCT asStruct(Connection conn)
        throws SQLException {
        STRUCT struct=null;
        StructDescriptor sd=
            StructDescriptor.createDescriptor("APPS.XXCSS_MAT_COV_LINE_REC_TYPE",conn);
        Object[] attributes = new Object[]{
            id,
            cleId,
            chrId,
            lineNumber,
            instanceId,
            productStartDate,
            productEndDate,
            quantity,
            listPrice,
            negotiatedAmount,
            ((stsCode==null) ? null : new CHAR(stsCode,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute1==null) ? null : new CHAR(attribute1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute2==null) ? null : new CHAR(attribute2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute3==null) ? null : new CHAR(attribute3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute4==null) ? null : new CHAR(attribute4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute5==null) ? null : new CHAR(attribute5,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute6==null) ? null : new CHAR(attribute6,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute7==null) ? null : new CHAR(attribute7,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute8==null) ? null : new CHAR(attribute8,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute9==null) ? null : new CHAR(attribute9,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute10==null) ? null : new CHAR(attribute10,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute11==null) ? null : new CHAR(attribute11,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute12==null) ? null : new CHAR(attribute12,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute13==null) ? null : new CHAR(attribute13,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute14==null) ? null : new CHAR(attribute14,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((attribute15==null) ? null : new CHAR(attribute15,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            renewCleId,
            ((terminationReason==null) ? null : new CHAR(terminationReason,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((terminationComments==null) ? null : new CHAR(terminationComments,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((errMsg==null) ? null : new CHAR(errMsg,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            cleIdRenewedTo,
            cleIdRenewed,
            dateTerminated,
            ((trnCode==null) ? null : new CHAR(trnCode,CharacterSet.make(CharacterSet.UTF8_CHARSET)))
        };
        struct=new STRUCT(sd,conn,attributes);

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return struct;
    }
    
    public static XxcssMatCovLineRecType newFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        XxcssMatCovLineRecType newInstance=newInstance();
        newInstance.loadFromStruct(conn,struct);
/* BEGIN PROTECT_BLOCK user_new_from_struct_code */
/* END PROTECT_BLOCK user_new_from_struct_code */

        return newInstance;
    }
    
    public String toString() {
        StringBuffer toStringBuffer = new StringBuffer();
        toStringBuffer.append(getClass());
        toStringBuffer.append("@");
        toStringBuffer.append(super.hashCode());
        toStringBuffer.append("[");
        this.appendToStringAttributes(toStringBuffer);
        toStringBuffer.append("]");
        return toStringBuffer.toString();
    }     

    protected void appendToStringAttributes(StringBuffer sb) {
        sb.append("id=").append(id);
        sb.append(",cleId=").append(cleId);
        sb.append(",chrId=").append(chrId);
        sb.append(",lineNumber=").append(lineNumber);
        sb.append(",instanceId=").append(instanceId);
        sb.append(",productStartDate=").append(productStartDate);
        sb.append(",productEndDate=").append(productEndDate);
        sb.append(",quantity=").append(quantity);
        sb.append(",listPrice=").append(listPrice);
        sb.append(",negotiatedAmount=").append(negotiatedAmount);
        sb.append(",stsCode=").append(stsCode);
        sb.append(",attribute1=").append(attribute1);
        sb.append(",attribute2=").append(attribute2);
        sb.append(",attribute3=").append(attribute3);
        sb.append(",attribute4=").append(attribute4);
        sb.append(",attribute5=").append(attribute5);
        sb.append(",attribute6=").append(attribute6);
        sb.append(",attribute7=").append(attribute7);
        sb.append(",attribute8=").append(attribute8);
        sb.append(",attribute9=").append(attribute9);
        sb.append(",attribute10=").append(attribute10);
        sb.append(",attribute11=").append(attribute11);
        sb.append(",attribute12=").append(attribute12);
        sb.append(",attribute13=").append(attribute13);
        sb.append(",attribute14=").append(attribute14);
        sb.append(",attribute15=").append(attribute15);
        sb.append(",renewCleId=").append(renewCleId);
        sb.append(",terminationReason=").append(terminationReason);
        sb.append(",terminationComments=").append(terminationComments);
        sb.append(",errMsg=").append(errMsg);
        sb.append(",cleIdRenewedTo=").append(cleIdRenewedTo);
        sb.append(",cleIdRenewed=").append(cleIdRenewed);
        sb.append(",dateTerminated=").append(dateTerminated);
        sb.append(",trnCode=").append(trnCode);

    }
    
    public Object clone() throws CloneNotSupportedException {
        XxcssMatCovLineRecType theClone = (XxcssMatCovLineRecType) super.clone();
        


        return theClone;
    }
    
    public boolean equals(Object obj) {
        boolean retVal = false;
        if (obj != null) {
            retVal = (hashCode()==obj.hashCode());   
        }
        return retVal; 
    }
    
    public int hashCode() {
        StringBuffer hashStringBuffer = new StringBuffer();
        
        hashStringBuffer.append("id=").append(id);
        hashStringBuffer.append("cleId=").append(cleId);
        hashStringBuffer.append("chrId=").append(chrId);
        hashStringBuffer.append("lineNumber=").append(lineNumber);
        hashStringBuffer.append("instanceId=").append(instanceId);
        hashStringBuffer.append("productStartDate=").append(productStartDate);
        hashStringBuffer.append("productEndDate=").append(productEndDate);
        hashStringBuffer.append("quantity=").append(quantity);
        hashStringBuffer.append("listPrice=").append(listPrice);
        hashStringBuffer.append("negotiatedAmount=").append(negotiatedAmount);
        hashStringBuffer.append("stsCode=").append(stsCode);
        hashStringBuffer.append("attribute1=").append(attribute1);
        hashStringBuffer.append("attribute2=").append(attribute2);
        hashStringBuffer.append("attribute3=").append(attribute3);
        hashStringBuffer.append("attribute4=").append(attribute4);
        hashStringBuffer.append("attribute5=").append(attribute5);
        hashStringBuffer.append("attribute6=").append(attribute6);
        hashStringBuffer.append("attribute7=").append(attribute7);
        hashStringBuffer.append("attribute8=").append(attribute8);
        hashStringBuffer.append("attribute9=").append(attribute9);
        hashStringBuffer.append("attribute10=").append(attribute10);
        hashStringBuffer.append("attribute11=").append(attribute11);
        hashStringBuffer.append("attribute12=").append(attribute12);
        hashStringBuffer.append("attribute13=").append(attribute13);
        hashStringBuffer.append("attribute14=").append(attribute14);
        hashStringBuffer.append("attribute15=").append(attribute15);
        hashStringBuffer.append("renewCleId=").append(renewCleId);
        hashStringBuffer.append("terminationReason=").append(terminationReason);
        hashStringBuffer.append("terminationComments=").append(terminationComments);
        hashStringBuffer.append("errMsg=").append(errMsg);
        hashStringBuffer.append("cleIdRenewedTo=").append(cleIdRenewedTo);
        hashStringBuffer.append("cleIdRenewed=").append(cleIdRenewed);
        hashStringBuffer.append("dateTerminated=").append(dateTerminated);
        hashStringBuffer.append("trnCode=").append(trnCode);

        return hashStringBuffer.toString().hashCode();
    }
      
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
