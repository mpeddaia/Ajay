/*****************************************************************************
 * XxccsIlCaamUserPrfPub.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/

package com.cisco.mcm.genJava;

/* Begin generated import statements */
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import oracle.jdbc.driver.OracleTypes;
import oracle.sql.ARRAY;
import oracle.sql.ArrayDescriptor;
import oracle.sql.STRUCT;

import com.cisco.ca.fea.daoservices.DAOServices;
import com.cisco.ca.fea.daoservices.util.ConnectionUtil;
 


/* End generated import statements */

/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 


public class XxccsIlCaamUserPrfPub extends Object implements java.io.Serializable {

    private static XxccsIlCaamUserPrfPub theInstance=null;
    
/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */

    


/* BEGIN PROTECT_BLOCK user_public_constants */
/* END PROTECT_BLOCK user_public_constants */


/* BEGIN PROTECT_BLOCK user_static_initializers */
/* END PROTECT_BLOCK user_static_initializers */


    public static synchronized XxccsIlCaamUserPrfPub getInstance() {
        if (theInstance==null) {
            theInstance = new XxccsIlCaamUserPrfPub();
        }
        return theInstance;
    }
    
    private XxccsIlCaamUserPrfPub() {
/* BEGIN PROTECT_BLOCK user_private_constructor */
/* END PROTECT_BLOCK user_private_constructor */

    }
    

    
    private static ARRAY buildOracleArrayFromList(Connection conn,List list,com.cisco.mcm.genJava.XxccsCaamUpObjType dummy)
        throws SQLException {
       // ARRAY oracleArray=null;
        com.cisco.mcm.genJava.XxccsCaamUpObjType element=null;
        Object[] jarray=null;
        STRUCT struct=null;
        ArrayDescriptor desc=
            ArrayDescriptor.createDescriptor("APPS.XXCCS_CAAM_UP_TAB_TYPE",conn);
        int i=0;
        if (list!=null) {
            jarray=new Object[list.size()];
            Iterator iterator=list.iterator();
            while (iterator.hasNext()) {
                element=(com.cisco.mcm.genJava.XxccsCaamUpObjType)iterator.next();
                struct=element.asStruct(conn);
                jarray[i++]=struct;
            }
        }
        return new ARRAY(desc,conn,jarray);
    }
    private static List buildListFromOracleArray(Connection conn,List list,ARRAY array,com.cisco.mcm.genJava.XxccsCaamUpObjType dummy)
        throws SQLException,InstantiationException,IllegalAccessException {
        List rlist=null;
        com.cisco.mcm.genJava.XxccsCaamUpObjType element=null;
        Object[] jarray=null;
        STRUCT struct=null;
        rlist=(list==null) ? new ArrayList() : list;
        if (list != null) {
            list.clear();
        }
        if (array!=null) {
            jarray=(Object[])array.getArray();
            for (int i=0;i<jarray.length;i++) {
                struct=(STRUCT)jarray[i];
                if (struct == null) {
                    element = null;
                } else {
                    element=com.cisco.mcm.genJava.XxccsCaamUpObjType.newFromStruct(conn,struct);
                }
                rlist.add(element);
            }
        }
        return rlist;
    }

       
    /**
     * This procedure gives User Preferences for a given user name, application
     * short Name. The output will be tab type. If user do not have Preferences,
     * Application default preferences will be return. if  Application default preferences
     * not available Global user preferences will be return.
     *
     * @param userName User name of type
     *                             fnd_user.user_name%type
     * @param applicationShortName Application Short name of type
     *                             FND_APPLICATION.APPLICATION_SHORT_NAME%TYPE
     *
     * @param userPrefTab The collection of User Preferences of type
     *                             XXCCS_CAAM_UP_TAB_TYPE;
     *
     **/
    public void getUserPreferences(
        DAOServices services,
        String userName,
        String applicationShortName,
        java.util.List[] userPrefTab)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin apps.xxccs_il_caam_user_prf_pub.get_user_preferences(:1,:2,:3); end;");
            stmt.setString(1,userName);
            stmt.setString(2,applicationShortName);
            stmt.registerOutParameter(3, OracleTypes.ARRAY,"APPS.XXCCS_CAAM_UP_TAB_TYPE");
            stmt.execute();
            ARRAY userPrefTabArray=(ARRAY)stmt.getArray(3);
            userPrefTab[0]=buildListFromOracleArray(services.getNativeConnection(conn),userPrefTab[0],userPrefTabArray,(com.cisco.mcm.genJava.XxccsCaamUpObjType)null);

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }

    /**
     * This procedure save User Preferences for a given user name, Profile Value,
     *  Profile Name
     *
     * @param userName User name of type
     *                             fnd_user.user_name%type
     * @param prefName Profile Option name of type
     *                             FND_PROFILE_OPTIONS.PROFILE_OPTION_NAME%TYPE
     *
     * @param prefValue Profile Option Value of type
     *                             FND_PROFILE_OPTION_VALUES.PROFILE_OPTION_VALUE%TYPE;
     *
     **/
    public void saveUserPreference(
        DAOServices services,
        String userName,
        String prefName,
        String prefValue)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin apps.xxccs_il_caam_user_prf_pub.save_user_preference(:1,:2,:3); end;");
            stmt.setString(1,userName);
            stmt.setString(2,prefName);
            stmt.setString(3,prefValue);
            stmt.execute();

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }

    /**
     * This procedure save User Preferences for a given user name,
     *  Profile Collection
     *
     * @param userName User name of type
     *                             fnd_user.user_name%type
     * @param userPrefTab Profile Options collection of type
     *                             XXCCS_CAAM_UP_TAB_TYPE
     *
     **/
    public void saveUserPreferences(
        DAOServices services,
        String userName,
        java.util.List userPrefTab)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin apps.xxccs_il_caam_user_prf_pub.save_user_preferences(:1,:2); end;");
            stmt.setString(1,userName);
            stmt.setArray(2,buildOracleArrayFromList(services.getNativeConnection(conn),userPrefTab,(com.cisco.mcm.genJava.XxccsCaamUpObjType)null));
            stmt.execute();

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }

    /**
     * This procedure gives the default application Preferences for a
     * given application Short Name. The output will be collection type
     * if  Application default preferences
     * not available, Global user preferences will be return.
     *
     * @param applicationShortName Applciation Short name of type
     *                             FND_APPLICATION.APPLICATION_SHORT_NAME%TYPE
     * @param userPrefTab Preferences collection of type
     *                             XXCCS_CAAM_UP_TAB_TYPE
     *
     **/
    public void getDefaultPreferences(
        DAOServices services,
        String applicationShortName,
        java.util.List[] userPrefTab)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin apps.xxccs_il_caam_user_prf_pub.get_default_preferences(:1,:2); end;");
            stmt.setString(1,applicationShortName);
            stmt.registerOutParameter(2, OracleTypes.ARRAY,"APPS.XXCCS_CAAM_UP_TAB_TYPE");
            stmt.execute();
            ARRAY userPrefTabArray=(ARRAY)stmt.getArray(2);
            userPrefTab[0]=buildListFromOracleArray(services.getNativeConnection(conn),userPrefTab[0],userPrefTabArray,(com.cisco.mcm.genJava.XxccsCaamUpObjType)null);

        } finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }


    
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
