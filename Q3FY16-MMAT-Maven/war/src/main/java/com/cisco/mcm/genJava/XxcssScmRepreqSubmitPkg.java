/*****************************************************************************
 * XxcssScmRepreqSubmitPkg.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/

package com.cisco.mcm.genJava;

/* Begin generated import statements */
import java.io.*;
import java.util.*;
import oracle.jdbc.driver.*;
import java.sql.*;
import oracle.sql.*;
import java.math.BigDecimal;
import com.cisco.ca.fea.daoservices.DAOServices;
import com.cisco.ca.fea.daoservices.util.ConnectionUtil;
import com.cisco.mcm.bo.McmReportContext;
import com.cisco.mcm.dao.oracletypes.OraMatReportParamsTbl;
 


/* End generated import statements */

/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 


public class XxcssScmRepreqSubmitPkg extends Object implements java.io.Serializable {

    private static XxcssScmRepreqSubmitPkg theInstance=null;
    
/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */

    


/* BEGIN PROTECT_BLOCK user_public_constants */
/* END PROTECT_BLOCK user_public_constants */


/* BEGIN PROTECT_BLOCK user_static_initializers */
/* END PROTECT_BLOCK user_static_initializers */


    public static synchronized XxcssScmRepreqSubmitPkg getInstance() {
        if (theInstance==null) 
        {
            theInstance = new XxcssScmRepreqSubmitPkg();
        }
        return theInstance;
    }
    
    private XxcssScmRepreqSubmitPkg() {
/* BEGIN PROTECT_BLOCK user_private_constructor */
/* END PROTECT_BLOCK user_private_constructor */

    }
    

    
    private static ARRAY buildOracleArrayFromList(Connection conn,List list,com.cisco.mcm.genJava.XxcssSsfUpldParmObjType dummy)
        throws SQLException {
      //  ARRAY oracleArray=null;
        com.cisco.mcm.genJava.XxcssSsfUpldParmObjType element=null;
        Object[] jarray=null;
        STRUCT struct=null;
        ArrayDescriptor desc=
            ArrayDescriptor.createDescriptor("APPS.XXCSS_SSF_UPLD_PARM_TAB_TYPE",conn);
        int i=0;
        if (list!=null) {
            jarray=new Object[list.size()];
            Iterator iterator=list.iterator();
            while (iterator.hasNext()) {
                element=(com.cisco.mcm.genJava.XxcssSsfUpldParmObjType)iterator.next();
                struct=element.asStruct(conn);
                jarray[i++]=struct;
            }
        }
        return new ARRAY(desc,conn,jarray);
    }

       

    public void submitprogramrequest(
        DAOServices services,
        String ccoUserid,
        String programName,
        String email,
        String emailCc,
        String emailBcc,
        OraMatReportParamsTbl parmTab,
        BigDecimal requestId,
        BigDecimal[] requestId1,
        String[] errorObj,
        String traceLevel)
        throws SQLException,InstantiationException,IllegalAccessException {
        Connection conn=null;
        CallableStatement stmt=null;
        try {
            conn = services.borrowConnection();
            stmt = conn.prepareCall("begin xxcss_scm_repreq_submit_pkg.submitprogramrequest(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10); end;");
            stmt.setString(1,ccoUserid);
            stmt.setString(2,programName);
            stmt.setString(3,email);
            stmt.setString(4,emailCc);
            stmt.setString(5,emailBcc);
            stmt.setObject(6,parmTab);
            stmt.setBigDecimal(7,requestId);
            /*3*/stmt.registerOutParameter(8, OracleTypes.NUMBER);
            /*3*/stmt.registerOutParameter(9, OracleTypes.VARCHAR);
            stmt.setString(10,traceLevel);
            stmt.execute();
            requestId1[0]=(BigDecimal)stmt.getBigDecimal(8);
            errorObj[0] =(String)stmt.getString(9);

        }
        finally  {
            try {
                ConnectionUtil.closeQuietly(stmt);
            } finally {
                services.returnConnection(conn);
            }
        }
    }


    
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
