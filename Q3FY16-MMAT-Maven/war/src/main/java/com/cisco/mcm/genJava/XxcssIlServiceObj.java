/*****************************************************************************
 * XxcssIlServiceObj.java
 *
 * Copyright 2001-2003 Cisco Systems, Inc. All Rights Reserved.
 * This software is the proprietary information of  Cisco Systems, Inc.
 *
 * NOTE:
 * This file was generated by the genJava script.  Please only make
 * changes to the file within protect blocks to ensure your changes are 
 * preserved when this file is next regenerated.
 * 
 *****************************************************************************/

package com.cisco.mcm.genJava;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.GregorianCalendar;

import oracle.sql.CHAR;
import oracle.sql.CharacterSet;
import oracle.sql.STRUCT;
import oracle.sql.StructDescriptor;


/* BEGIN PROTECT_BLOCK user_imports */
/* END PROTECT_BLOCK user_imports */

 
public class XxcssIlServiceObj 
/* BEGIN PROTECT_BLOCK user_extends */
/* END PROTECT_BLOCK user_extends */

implements java.io.Serializable,Cloneable 
/* BEGIN PROTECT_BLOCK user_implements */
/* END PROTECT_BLOCK user_implements */

{



    public static java.sql.Timestamp MISSING_DATE;
    public static final BigDecimal MISSING_NUM=new BigDecimal("9.99E125");
    public static final String MISSING_CHAR=new String(new byte[]{0});
    public static Class factoryClass = XxcssIlServiceObj.class;

    static {     
        GregorianCalendar gc = new GregorianCalendar(4713,0,1);
        gc.set(GregorianCalendar.ERA,GregorianCalendar.BC);
        java.util.Date d=gc.getTime();
        MISSING_DATE=new java.sql.Timestamp(d.getTime());
    };

    public static void setFactoryClass(Class aFactoryClass) {
        factoryClass = aFactoryClass;
    }
    
    public static XxcssIlServiceObj newInstance()
        throws InstantiationException, IllegalAccessException {
        return (XxcssIlServiceObj) factoryClass.newInstance();
    }

public XxcssIlServiceObj() {
        applShortName=MISSING_CHAR;
        sessionId=MISSING_NUM;
        moduleName=MISSING_CHAR;
        moduleVersion=MISSING_CHAR;
        userName=MISSING_CHAR;
        auditParam1=MISSING_CHAR;
        auditParam2=MISSING_CHAR;
        auditParam3=MISSING_CHAR;
        auditParam4=MISSING_CHAR;
        auditParam5=MISSING_CHAR;
        perfParam1=MISSING_CHAR;
        perfParam2=MISSING_CHAR;
        perfParam3=MISSING_CHAR;
        perfParam4=MISSING_CHAR;
        perfParam5=MISSING_CHAR;
        miscAttrib1=MISSING_CHAR;
        miscAttrib2=MISSING_CHAR;
        miscAttrib3=MISSING_CHAR;
        miscAttrib4=MISSING_CHAR;
        miscAttrib5=MISSING_CHAR;

/* BEGIN PROTECT_BLOCK user_default_constructor_code */
/* END PROTECT_BLOCK user_default_constructor_code */

}

/* BEGIN PROTECT_BLOCK user_member_variables */
/* END PROTECT_BLOCK user_member_variables */


    private String applShortName;
    private BigDecimal sessionId;
    private String moduleName;
    private String moduleVersion;
    private String userName;
    private String auditParam1;
    private String auditParam2;
    private String auditParam3;
    private String auditParam4;
    private String auditParam5;
    private String perfParam1;
    private String perfParam2;
    private String perfParam3;
    private String perfParam4;
    private String perfParam5;
    private String miscAttrib1;
    private String miscAttrib2;
    private String miscAttrib3;
    private String miscAttrib4;
    private String miscAttrib5;


    // getter methods
    public String getApplShortName() {
        return applShortName;
    }
    public BigDecimal getSessionId() {
        return sessionId;
    }
    public String getModuleName() {
        return moduleName;
    }
    public String getModuleVersion() {
        return moduleVersion;
    }
    public String getUserName() {
        return userName;
    }
    public String getAuditParam1() {
        return auditParam1;
    }
    public String getAuditParam2() {
        return auditParam2;
    }
    public String getAuditParam3() {
        return auditParam3;
    }
    public String getAuditParam4() {
        return auditParam4;
    }
    public String getAuditParam5() {
        return auditParam5;
    }
    public String getPerfParam1() {
        return perfParam1;
    }
    public String getPerfParam2() {
        return perfParam2;
    }
    public String getPerfParam3() {
        return perfParam3;
    }
    public String getPerfParam4() {
        return perfParam4;
    }
    public String getPerfParam5() {
        return perfParam5;
    }
    public String getMiscAttrib1() {
        return miscAttrib1;
    }
    public String getMiscAttrib2() {
        return miscAttrib2;
    }
    public String getMiscAttrib3() {
        return miscAttrib3;
    }
    public String getMiscAttrib4() {
        return miscAttrib4;
    }
    public String getMiscAttrib5() {
        return miscAttrib5;
    }

    // setter methods                       
    public void setApplShortName(String aApplShortName) {
        applShortName = aApplShortName;
    }
    public void setSessionId(BigDecimal aSessionId) {
        sessionId = aSessionId;
    }
    public void setModuleName(String aModuleName) {
        moduleName = aModuleName;
    }
    public void setModuleVersion(String aModuleVersion) {
        moduleVersion = aModuleVersion;
    }
    public void setUserName(String aUserName) {
        userName = aUserName;
    }
    public void setAuditParam1(String aAuditParam1) {
        auditParam1 = aAuditParam1;
    }
    public void setAuditParam2(String aAuditParam2) {
        auditParam2 = aAuditParam2;
    }
    public void setAuditParam3(String aAuditParam3) {
        auditParam3 = aAuditParam3;
    }
    public void setAuditParam4(String aAuditParam4) {
        auditParam4 = aAuditParam4;
    }
    public void setAuditParam5(String aAuditParam5) {
        auditParam5 = aAuditParam5;
    }
    public void setPerfParam1(String aPerfParam1) {
        perfParam1 = aPerfParam1;
    }
    public void setPerfParam2(String aPerfParam2) {
        perfParam2 = aPerfParam2;
    }
    public void setPerfParam3(String aPerfParam3) {
        perfParam3 = aPerfParam3;
    }
    public void setPerfParam4(String aPerfParam4) {
        perfParam4 = aPerfParam4;
    }
    public void setPerfParam5(String aPerfParam5) {
        perfParam5 = aPerfParam5;
    }
    public void setMiscAttrib1(String aMiscAttrib1) {
        miscAttrib1 = aMiscAttrib1;
    }
    public void setMiscAttrib2(String aMiscAttrib2) {
        miscAttrib2 = aMiscAttrib2;
    }
    public void setMiscAttrib3(String aMiscAttrib3) {
        miscAttrib3 = aMiscAttrib3;
    }
    public void setMiscAttrib4(String aMiscAttrib4) {
        miscAttrib4 = aMiscAttrib4;
    }
    public void setMiscAttrib5(String aMiscAttrib5) {
        miscAttrib5 = aMiscAttrib5;
    }


    // other methods


    public XxcssIlServiceObj loadFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        Object[] attributes=struct.getAttributes();
        applShortName=(String)attributes[0];
        sessionId=(BigDecimal)attributes[1];
        moduleName=(String)attributes[2];
        moduleVersion=(String)attributes[3];
        userName=(String)attributes[4];
        auditParam1=(String)attributes[5];
        auditParam2=(String)attributes[6];
        auditParam3=(String)attributes[7];
        auditParam4=(String)attributes[8];
        auditParam5=(String)attributes[9];
        perfParam1=(String)attributes[10];
        perfParam2=(String)attributes[11];
        perfParam3=(String)attributes[12];
        perfParam4=(String)attributes[13];
        perfParam5=(String)attributes[14];
        miscAttrib1=(String)attributes[15];
        miscAttrib2=(String)attributes[16];
        miscAttrib3=(String)attributes[17];
        miscAttrib4=(String)attributes[18];
        miscAttrib5=(String)attributes[19];

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return this;
    }
    
    public STRUCT asStruct(Connection conn)
        throws SQLException {
        STRUCT struct=null;
        StructDescriptor sd=
            StructDescriptor.createDescriptor("APPS.XXCSS_IL_SERVICE_OBJ",conn);
        Object[] attributes = new Object[]{
            ((applShortName==null) ? null : new CHAR(applShortName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            sessionId,
            ((moduleName==null) ? null : new CHAR(moduleName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((moduleVersion==null) ? null : new CHAR(moduleVersion,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((userName==null) ? null : new CHAR(userName,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((auditParam1==null) ? null : new CHAR(auditParam1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((auditParam2==null) ? null : new CHAR(auditParam2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((auditParam3==null) ? null : new CHAR(auditParam3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((auditParam4==null) ? null : new CHAR(auditParam4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((auditParam5==null) ? null : new CHAR(auditParam5,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((perfParam1==null) ? null : new CHAR(perfParam1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((perfParam2==null) ? null : new CHAR(perfParam2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((perfParam3==null) ? null : new CHAR(perfParam3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((perfParam4==null) ? null : new CHAR(perfParam4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((perfParam5==null) ? null : new CHAR(perfParam5,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((miscAttrib1==null) ? null : new CHAR(miscAttrib1,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((miscAttrib2==null) ? null : new CHAR(miscAttrib2,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((miscAttrib3==null) ? null : new CHAR(miscAttrib3,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((miscAttrib4==null) ? null : new CHAR(miscAttrib4,CharacterSet.make(CharacterSet.UTF8_CHARSET))),
            ((miscAttrib5==null) ? null : new CHAR(miscAttrib5,CharacterSet.make(CharacterSet.UTF8_CHARSET)))
        };
        struct=new STRUCT(sd,conn,attributes);

/* BEGIN PROTECT_BLOCK user_load_from_struct_code */
/* END PROTECT_BLOCK user_load_from_struct_code */

        return struct;
    }
    
    public static XxcssIlServiceObj newFromStruct(Connection conn,STRUCT struct) 
        throws SQLException,InstantiationException,IllegalAccessException {
        XxcssIlServiceObj newInstance=newInstance();
        newInstance.loadFromStruct(conn,struct);
/* BEGIN PROTECT_BLOCK user_new_from_struct_code */
/* END PROTECT_BLOCK user_new_from_struct_code */

        return newInstance;
    }
    
    public String toString() {
        StringBuffer toStringBuffer = new StringBuffer();
        toStringBuffer.append(getClass());
        toStringBuffer.append("@");
        toStringBuffer.append(super.hashCode());
        toStringBuffer.append("[");
        this.appendToStringAttributes(toStringBuffer);
        toStringBuffer.append("]");
        return toStringBuffer.toString();
    }     

    protected void appendToStringAttributes(StringBuffer sb) {
        sb.append("applShortName=").append(applShortName);
        sb.append(",sessionId=").append(sessionId);
        sb.append(",moduleName=").append(moduleName);
        sb.append(",moduleVersion=").append(moduleVersion);
        sb.append(",userName=").append(userName);
        sb.append(",auditParam1=").append(auditParam1);
        sb.append(",auditParam2=").append(auditParam2);
        sb.append(",auditParam3=").append(auditParam3);
        sb.append(",auditParam4=").append(auditParam4);
        sb.append(",auditParam5=").append(auditParam5);
        sb.append(",perfParam1=").append(perfParam1);
        sb.append(",perfParam2=").append(perfParam2);
        sb.append(",perfParam3=").append(perfParam3);
        sb.append(",perfParam4=").append(perfParam4);
        sb.append(",perfParam5=").append(perfParam5);
        sb.append(",miscAttrib1=").append(miscAttrib1);
        sb.append(",miscAttrib2=").append(miscAttrib2);
        sb.append(",miscAttrib3=").append(miscAttrib3);
        sb.append(",miscAttrib4=").append(miscAttrib4);
        sb.append(",miscAttrib5=").append(miscAttrib5);

    }
    
    public Object clone() throws CloneNotSupportedException {
        XxcssIlServiceObj theClone = (XxcssIlServiceObj) super.clone();
        


        return theClone;
    }
    
    public boolean equals(Object obj) {
        boolean retVal = false;
        if (obj != null) {
            retVal = (hashCode()==obj.hashCode());   
        }
        return retVal; 
    }
    
    public int hashCode() {
        StringBuffer hashStringBuffer = new StringBuffer();
        
        hashStringBuffer.append("applShortName=").append(applShortName);
        hashStringBuffer.append("sessionId=").append(sessionId);
        hashStringBuffer.append("moduleName=").append(moduleName);
        hashStringBuffer.append("moduleVersion=").append(moduleVersion);
        hashStringBuffer.append("userName=").append(userName);
        hashStringBuffer.append("auditParam1=").append(auditParam1);
        hashStringBuffer.append("auditParam2=").append(auditParam2);
        hashStringBuffer.append("auditParam3=").append(auditParam3);
        hashStringBuffer.append("auditParam4=").append(auditParam4);
        hashStringBuffer.append("auditParam5=").append(auditParam5);
        hashStringBuffer.append("perfParam1=").append(perfParam1);
        hashStringBuffer.append("perfParam2=").append(perfParam2);
        hashStringBuffer.append("perfParam3=").append(perfParam3);
        hashStringBuffer.append("perfParam4=").append(perfParam4);
        hashStringBuffer.append("perfParam5=").append(perfParam5);
        hashStringBuffer.append("miscAttrib1=").append(miscAttrib1);
        hashStringBuffer.append("miscAttrib2=").append(miscAttrib2);
        hashStringBuffer.append("miscAttrib3=").append(miscAttrib3);
        hashStringBuffer.append("miscAttrib4=").append(miscAttrib4);
        hashStringBuffer.append("miscAttrib5=").append(miscAttrib5);

        return hashStringBuffer.toString().hashCode();
    }
      
/* BEGIN PROTECT_BLOCK user_java_code */
/* END PROTECT_BLOCK user_java_code */

}
